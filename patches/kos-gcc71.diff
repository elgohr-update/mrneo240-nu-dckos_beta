--- kos-orig/addons/libppp/ipcp.c	2019-08-19 18:41:38.250000000 -0400
+++ kos/addons/libppp/ipcp.c	2019-08-19 14:03:49.640000000 -0400
@@ -555,6 +555,7 @@
             ipcp_state.resend_pkt = NULL;
             ipcp_state.resend_timeout = NULL;
             ipcp_state.state = PPP_STATE_STOPPING;
+	    __attribute__ ((fallthrough));
 
         default:
             return -1;
diff -bur kos-orig/addons/libppp/lcp.c kos/addons/libppp/lcp.c
--- kos-orig/addons/libppp/lcp.c	2019-08-19 18:41:38.250000000 -0400
+++ kos/addons/libppp/lcp.c	2019-08-19 14:03:17.380000000 -0400
@@ -843,6 +843,7 @@
             lcp_state.resend_pkt = NULL;
             lcp_state.resend_timeout = NULL;
             lcp_state.state = PPP_STATE_STOPPING;
+	    __attribute__ ((fallthrough));
 
         default:
             return -1;
diff -bur kos-orig/addons/libppp/ppp.c kos/addons/libppp/ppp.c
--- kos-orig/addons/libppp/ppp.c	2019-08-19 18:41:38.250000000 -0400
+++ kos/addons/libppp/ppp.c	2019-08-19 14:02:30.620000000 -0400
@@ -364,6 +364,7 @@
                             expect = EXPECT_DATA;
                             /* Fall through... */
                         }
+			__attribute__ ((fallthrough));
 
                     case EXPECT_DATA:
                         if(ppp_recvbuf_len < PPP_MRU + 4) {
diff -bur kos-orig/include/assert.h kos/include/assert.h
--- kos-orig/include/assert.h	2019-08-19 18:41:38.290000000 -0400
+++ kos/include/assert.h	2019-08-19 13:57:17.350000000 -0400
@@ -42,7 +42,7 @@
     \param  e               A value or expression to be evaluated as true or
                             false.
 */
-#   define assert(e)        ((e) ? (void)0 : __assert(__FILE__, __LINE__, #e, NULL, __FUNCTION__))
+#   define assert(e)        ((e) ? (void)0 : __assert(__FILE__, __LINE__, #e, NULL,  __func__))
 
 /** \brief  assert() with a custom message.
